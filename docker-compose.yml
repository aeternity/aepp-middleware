version: '3.1'
services:
  middleware:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    ports:
      - "8080:80"
      - "3020:3020"
    entrypoint: /bin/wait-for-it.sh node:3013 -- ./aeternal -p -s -w
    environment:
      - NODE_URL=node:3013
      - AESOPHIA_URL=compiler:3080
      - DATABASE_URL=postgres://middleware:middleware@db/middleware
    depends_on:
      - db
      - node
      - compiler

  frontend:
    build:
      context: ./frontend/
      dockerfile: nginx.Dockerfile
      args:
        - NODE_URL=http://localhost:8080
        - NODE_WS=http://localhost:3020
        - NETWORK_NAME='TEST NET'
    ports:
      - "8081:80"
    depends_on:
      - middleware

  node:
    image: aeternity/aeternity:${NODE_TAG}
    hostname: node
    expose: [3013, 3113, 3014]
    environment:
      AETERNITY_CONFIG: /home/aeternity/aeternity.yaml
    volumes:
      - ${PWD}/docker/aeternity.yaml:/home/aeternity/aeternity.yaml
      - node_db:/home/aeternity/node/data/mnesia

  db:
    image: postgres:11
    restart: unless-stopped
    environment:
      - POSTGRES_USER=middleware
      - POSTGRES_PASSWORD=middleware
      - POSTGRES_DB=middleware
    volumes: 
      - ae-mdw-postgres-volume:/var/lib/postgresql/data
    expose: [5432]

  compiler:
    image: aeternity/aesophia_http:${COMPILER_TAG}
    hostname: compiler
    expose: [3080]
    
volumes:
    ae-mdw-postgres-volume:
      external: false
    node_db:
